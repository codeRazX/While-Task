{"version":3,"file":"main.js","mappings":"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","sources":["webpack://whiletask/webpack/bootstrap","webpack://whiletask/webpack/runtime/global","webpack://whiletask/webpack/runtime/publicPath","webpack://whiletask/./src/js/variables.js","webpack://whiletask/./src/js/storage.js","webpack://whiletask/./src/js/utilities.js","webpack://whiletask/./src/js/Task.js","webpack://whiletask/./src/js/content-task.js","webpack://whiletask/./src/js/form-edit.js","webpack://whiletask/./src/js/form.js","webpack://whiletask/./src/js/event-handle.js","webpack://whiletask/./src/js/handle-action.js","webpack://whiletask/./src/js/interface.js","webpack://whiletask/./src/js/filter.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript && document.currentScript.tagName.toUpperCase() === 'SCRIPT')\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","const getVariables = (function(){\r\n    \r\n    const board = document.getElementById(\"board-container\");\r\n    const form = document.getElementById(\"form\");\r\n    const modal = document.getElementById(\"modal\");\r\n    const modalEdit = document.getElementById(\"modal-edit\");\r\n    const formEdit = modalEdit.querySelector(\"#form__edit\");\r\n    const btnCloseModal = modal.querySelector(\".modal__close\");\r\n    const overlay = document.getElementById(\"overlay\");\r\n    const btnAdd = document.getElementById(\"add-btn\");\r\n    const containerTask = board.querySelectorAll('[data-item=\"container\"]');\r\n    const defaultMessage = document.getElementById(\"default-message\");\r\n    const addNoteEdit = document.getElementById(\"add-notes-edit\");\r\n    const subtmitBtnEdit = document.getElementById(\"edit-submit\");\r\n    const dateCompletedEdit = document.getElementById(\"edit-dateCompleted\");\r\n    const boardPanel = document.getElementById(\"board-panel\");\r\n    const formFilter = boardPanel.querySelector(\"#form-filter\");\r\n    const titlesHeader = document.getElementById(\"nav-header\").querySelectorAll(\"H2\");\r\n\r\n\r\n    const MAX_LENGTH_VIEWPORT = 100;\r\n    const MAX_LENGTH_TITLE = 250;\r\n    const MAX_LENGTH_DESCRIPTION = 1000;\r\n    const MAX_LENGTH_NOTE = 1500;\r\n    const offsetScroll = 10;\r\n    const KEY = \"task\";\r\n    const STATUS_PENDING = \"pending\";\r\n    const STATUS_INPROGRESS = \"progress\";\r\n\r\n    const PROPERTIES = {\r\n        title: \"title\",\r\n        description : \"description\",\r\n        priority: \"priority\",\r\n        duedate: \"duedate\",\r\n        timeDuedate: \"timeDuedate\",\r\n        status: \"status\",\r\n        note:\"note\",\r\n    }\r\n\r\n    const ACTIONS = {\r\n        openMenu: \"openMenu\",\r\n        view: \"view\",\r\n        completed: \"completed\",\r\n        deleteTask : \"deleteTask\",\r\n        switchStatus: \"switchStatus\",\r\n        switchPriority: \"switchPriority\",\r\n        addNote: \"addNote\",\r\n        openNote: \"openNote\",\r\n        deleteNote: \"deleteNote\",\r\n    };\r\n\r\n    const maxLengthViewport = ()=> MAX_LENGTH_VIEWPORT;\r\n    const maxLengthTitle = ()=> MAX_LENGTH_TITLE;\r\n    const maxLengthDescription = ()=> MAX_LENGTH_DESCRIPTION;\r\n    const maxLengthNote = ()=> MAX_LENGTH_NOTE;\r\n    const key = ()=>KEY;\r\n    const pending = ()=> STATUS_PENDING;\r\n    const progress = ()=> STATUS_INPROGRESS;\r\n    const actions = ()=> ACTIONS;\r\n    const properties = ()=> PROPERTIES;\r\n   \r\n    return {containerTask,modal,overlay,btnAdd, form, maxLengthViewport,maxLengthTitle,maxLengthDescription, board, key, pending,progress, defaultMessage, actions,btnCloseModal, modalEdit,formEdit, maxLengthNote,offsetScroll,addNoteEdit,subtmitBtnEdit,dateCompletedEdit, boardPanel,formFilter,titlesHeader, properties};\r\n    \r\n})();\r\nexport default getVariables;","import variables from \"./variables\"\r\n\r\nexport const storage = {\r\n   getStorage: ()=>JSON.parse(localStorage.getItem(variables.key())) || [],\r\n   setStorage: (value)=> localStorage.setItem(variables.key(), JSON.stringify(value)),\r\n}","import { showMessage } from \"./interface\";\r\n\r\nexport const toUpper = (el)=> el.charAt(0).toUpperCase() + el.slice(1);\r\n\r\nexport const activeEl = el => el.style.display = \"block\";\r\n\r\nexport const desactivedEl = el => el.style.display = \"none\";\r\n\r\nexport const replaceClass = (el,currentClass,newClass) => el.classList.replace(currentClass,newClass);\r\n\r\nexport const disabledInputs = inputs => inputs.forEach(input => input.classList.add(\"disabled__input\"));\r\n\r\nexport const cutText = (text,max, edit = false,container = \"\") =>{\r\n  if(text.length >= max){\r\n    if(edit)\r\n    {\r\n    showMessage(\"error\",container,\"Maximum allowed characters\");\r\n    return text.slice(0,max).trim();\r\n    }\r\n    return text.slice(0,max).trim() + \"...\";\r\n    \r\n  }\r\n  return text;\r\n}\r\nexport const waitFor = (ms) => new Promise(resolve => setTimeout(resolve, ms));\r\n\r\nexport const adjustHeight = (el)=>{\r\n  el.value.length > 100? el.style.height = \"auto\": el.style.height = \"2rem\";\r\n  el.style.height =el.scrollHeight + 'px';\r\n}\r\n\r\nexport const scrollToTarget = (target)=> target.scrollIntoView({behavior: \"smooth\",block: \"center\"});\r\n\r\nexport const generateHTML = (el,clase = \"\",content = \"\",src=\"\",alt=\"\",...childs)=>{\r\n  const item = document.createElement(el);\r\n  if(clase)item.className = clase;\r\n  if(src)item.src = src;\r\n  if(alt)item.alt = alt;\r\n  if(content)item.textContent = content;\r\n  if(childs)item.append(...childs);\r\n  return item;\r\n}\r\n\r\nexport const clearHTML = (item, edit = false)=>{\r\n  if(!edit){\r\n    item.forEach(container =>{\r\n      if(container.childElementCount >= 1){\r\n          while(container.firstChild){\r\n              container.removeChild(container.firstChild);\r\n          }\r\n      }\r\n  })\r\n  }else{\r\n    while(item.firstChild){\r\n      item.removeChild(item.firstChild);\r\n  }\r\n  }\r\n\r\n}\r\n\r\n\r\nexport const currentDate = ()=>{\r\n   \r\n    const date = new Date();\r\n   \r\n    const formattedDate = date.toLocaleDateString(undefined,{\r\n        weekday: 'long',\r\n        year: 'numeric',\r\n        month: '2-digit',\r\n        day: '2-digit',\r\n      });\r\n\r\n      const formattedTime = date.toLocaleTimeString(undefined, {\r\n        hour: '2-digit',    \r\n        minute: '2-digit',  \r\n        second: '2-digit',  \r\n        hour12: false        \r\n      });\r\n      const finalDate = `${formattedDate} - ${formattedTime}`;\r\n      return toUpper(finalDate);\r\n}\r\nexport const toDateString = (dateString)=>{\r\n  if(!dateString)return;\r\n  const date = new Date(dateString);\r\n\r\n  const formattedDate = date.toLocaleDateString(undefined,{\r\n      year: 'numeric',\r\n      month: '2-digit',\r\n      day: '2-digit',\r\n    });\r\n\r\n    return formattedDate;\r\n}\r\nexport const dateNotDay = ()=>{\r\n  const date = new Date();\r\n   \r\n  const formattedDate = date.toLocaleDateString(undefined,{\r\n      year: 'numeric',\r\n      month: '2-digit',\r\n      day: '2-digit',\r\n    });\r\n   \r\n    return formattedDate;\r\n}\r\nexport const calculateRemainingTime = (dateString) => {\r\n  if (!dateString) return;\r\n\r\n  const currentDate = new Date();\r\n  let targetDate;\r\n  \r\n  targetDate = (dateString.includes(\"-\")) ? new Date(dateString) : new Date(currentDate.toDateString() + \" \" + dateString);\r\n \r\n  !dateString.includes(\":\") && targetDate.setHours(0, 0, 0, 0);\r\n  \r\n  if (isNaN(targetDate)) return { days: 0, hours: 0, minutes: 0, seconds: 0 };\r\n  \r\n  const currentTime = currentDate.getTime(); \r\n  const targetTime = targetDate.getTime(); \r\n  const remTime = targetTime - currentTime;\r\n  \r\n  if (remTime <= 0) {\r\n    return { days: 0, hours: 0, minutes: 0, seconds:0 };\r\n  }\r\n  \r\n  const seconds = Math.floor(remTime / 1000);\r\n  const minutesRemaining = Math.floor(seconds / 60);\r\n  const hoursRemaining = Math.floor(minutesRemaining / 60);\r\n  const daysRemaining = Math.floor(hoursRemaining / 24);\r\n  \r\n  const totalHours = hoursRemaining % 24;\r\n  const totalMinutes = minutesRemaining % 60;\r\n  const totalSeconds = seconds % 60;\r\n  \r\n  \r\n  return { days: daysRemaining, hours: totalHours, minutes: totalMinutes, seconds:totalSeconds };\r\n  \r\n}\r\n\r\nexport const getDataForm = (data)=>Object.fromEntries(new FormData(data));\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import { generateHTML, toDateString, cutText, currentDate, calculateRemainingTime,dateNotDay,toUpper, scrollToTarget} from \"./utilities\";\r\nimport getVariables from \"./variables\";\r\nimport imgMenu from \"../img/context-menu.svg\";\r\nimport imgView from \"../img/info.svg\";\r\nimport imgCheck from \"../img/check.svg\";\r\nimport imgRemove from \"../img/delete.svg\";\r\nimport contentTask from \"./content-task\";\r\nimport iconStatus from \"../img/toggle-status.svg\";\r\nimport iconPriority from \"../img/toggle-priority.svg\";\r\nimport iconAddNote from \"../img/add-notes.svg\";\r\nimport iconMore from \"../img/more-notes.svg\";\r\nimport iconDeleteNotes from \"../img/delete-notes.svg\";\r\nimport { storage } from \"./storage\";\r\n\r\nexport default class Task{\r\n    constructor({title,description,duedate = undefined,priority,note =\"\",id,date,status, dateCompleted =undefined, isNew, timeDuedate = undefined, completedDuedate=undefined, sortDate = \"\"}){\r\n\r\n        this.title = toUpper(title);\r\n        this.description = toUpper(description);\r\n        this.duedate = duedate || toDateString(duedate);\r\n        this.priority = parseInt(priority);\r\n        this.note = note;\r\n        this.id = id || Date.now();\r\n        this.date = date || currentDate();\r\n        this.status = status || \"pending\";\r\n        this.dateCompleted = dateCompleted;\r\n        this.timeDuedate = timeDuedate;\r\n        this.isNew = (isNew !== undefined) ? isNew : true; \r\n        this.completedDuedate = completedDuedate || (duedate && timeDuedate ? `${duedate} ${timeDuedate}` : duedate || timeDuedate);   \r\n        this.sortDate = sortDate || new Date();\r\n    }\r\n    \r\n\r\n    menuView = ()=>{\r\n        const imgInfo = generateHTML(\"IMG\",\"\",\"\",imgView,\"Icon view\");\r\n        imgInfo.loading = \"lazy\";\r\n        const infoView= generateHTML(\"P\",\"\",\"View/Edit\");\r\n        const menuFieldView = generateHTML(\"DIV\",\"task__modal__menu__option\",\"\",\"\",\"\",imgInfo,infoView);\r\n        menuFieldView.dataset.action = getVariables.actions().view;\r\n        return menuFieldView;\r\n    }\r\n    menuStatus = ()=>{\r\n        const infoStatus =generateHTML(\"P\",\"\",\"Change Status\");\r\n        const imgToggleStatus = generateHTML(\"IMG\",\"\",\"\",iconStatus,\"Icon Status\");\r\n        imgToggleStatus.loading = \"lazy\";\r\n        const menuFieldStatus = generateHTML(\"DIV\",\"task__modal__menu__option\",\"\",\"\",\"\",imgToggleStatus,infoStatus);\r\n        menuFieldStatus.dataset.action = getVariables.actions().switchStatus;\r\n        return menuFieldStatus;\r\n    }\r\n    menuPriority = ()=>{\r\n        \r\n        if(this.status !== \"completed\"){\r\n            const infoPriority =generateHTML(\"P\",\"\",\"Change Priority\");\r\n            const imgPriority = generateHTML(\"IMG\",\"\",\"\",iconPriority,\"Icon Priority\");\r\n            imgPriority.loading = \"lazy\";\r\n            const menuFieldPriority = generateHTML(\"DIV\",\"task__modal__menu__option\",\"\",\"\",\"\",imgPriority,infoPriority);\r\n            menuFieldPriority.dataset.action = getVariables.actions().switchPriority;\r\n            return menuFieldPriority;\r\n        }\r\n        return \"\";\r\n    }\r\n    menuCompleted = ()=>{\r\n        if(this.status !== \"completed\"){\r\n            const imgCompleted = generateHTML(\"IMG\",\"\",\"\",imgCheck,\"Icon Completed\");\r\n            imgCompleted.loading =\"lazy\";\r\n            const infoCompleted = generateHTML(\"P\",\"\",\"Mark as Completed\");\r\n            const menuFieldCompleted = generateHTML(\"DIV\",\"task__modal__menu__option\",\"\",\"\",\"\",imgCompleted,infoCompleted);\r\n            menuFieldCompleted.dataset.action = getVariables.actions().completed;\r\n            return menuFieldCompleted;\r\n        }\r\n        return \"\";\r\n        \r\n    }\r\n    menuRemove = ()=>{\r\n        const imgDelete = generateHTML(\"IMG\",\"\",\"\",imgRemove,\"Icon Remove\");\r\n        imgDelete.loading = \"lazy\";\r\n        const infoDelete = generateHTML(\"P\",\"\",\"Remove\");\r\n        const menuFieldRemove = generateHTML(\"DIV\",\"task__modal__menu__option\",\"\",\"\",\"\",imgDelete,infoDelete);\r\n        menuFieldRemove.dataset.action = getVariables.actions().deleteTask;\r\n        return menuFieldRemove;\r\n    }\r\n    blockMenu = ()=>{\r\n        const imgModalTask = generateHTML(\"IMG\",\"\",\"\",imgMenu,\"Icon Menu\");\r\n        imgModalTask.loading = \"lazy\";\r\n        const taskModalMenu = generateHTML(\"DIV\",\"task__modal__menu disabled\");\r\n        taskModalMenu.append(this.menuView(),this.menuStatus(),this.menuPriority(),this.menuCompleted(),this.menuRemove());\r\n        taskModalMenu.classList.add(\"task__modal__menu\",\"disabled\");\r\n        const taskModal = generateHTML(\"DIV\",\"task__modal\",\"\",\"\",\"\",imgModalTask,taskModalMenu); \r\n        imgModalTask.dataset.action = getVariables.actions().openMenu;\r\n        return taskModal; \r\n    }\r\n\r\n    subBlockDate = ()=>{\r\n\r\n        const contentDateAdded = generateHTML(\"SPAN\", \"\", this.date);\r\n        const dateAdded = generateHTML(\"P\", \"\", \"Date Added\",\"\",\"\",contentDateAdded);\r\n        const divDataAdded = generateHTML(\"DIV\", \"task__date__current\",\"\",\"\",\"\",dateAdded);  \r\n        const blockDates = generateHTML(\"DIV\", \"task__date\",\"\",\"\",\"\",divDataAdded);\r\n        \r\n        \r\n        if (this.completedDuedate && this.status !== \"completed\") {\r\n            const dateDuedate = generateHTML(\"DIV\", \"task__date__duedate\");\r\n            const remainingTime = calculateRemainingTime(this.completedDuedate);\r\n\r\n            if (remainingTime.days !== 0) {\r\n                const remainingDays = generateHTML(\"SPAN\", \"task__date__duedate__field__time\", remainingTime.days);\r\n                const labelRemaningDays = generateHTML(\"P\", \"\", \"Days\");\r\n                const remainingFieldDays = generateHTML(\"DIV\", \"task__date__duedate__field\",\"\",\"\",\"\",remainingDays,labelRemaningDays);\r\n                dateDuedate.append(remainingFieldDays);\r\n            }\r\n\r\n             if (remainingTime.hours !== 0) {\r\n                const remainingHours = generateHTML(\"SPAN\", \"task__date__duedate__field__time\", remainingTime.hours);\r\n                const labelRemaningHours = generateHTML(\"P\", \"\", \"Hours\");\r\n                const remainingFieldHours = generateHTML(\"DIV\", \"task__date__duedate__field\",\"\",\"\",\"\",remainingHours,labelRemaningHours);\r\n                dateDuedate.appendChild(remainingFieldHours);\r\n            }\r\n\r\n             if (remainingTime.minutes !== 0) {           \r\n                const remainingMinutes = generateHTML(\"SPAN\", \"task__date__duedate__field__time\", remainingTime.minutes);\r\n                const labelRemaningMinutes = generateHTML(\"P\", \"\", \"Minutes\");\r\n                const remainingFieldMinutes = generateHTML(\"DIV\", \"task__date__duedate__field\",\"\",\"\",\"\",remainingMinutes,labelRemaningMinutes);\r\n                dateDuedate.appendChild(remainingFieldMinutes);\r\n            }\r\n\r\n            if (remainingTime.days<= 0 && remainingTime.hours<= 0 && remainingTime.minutes<= 0 && remainingTime.seconds > 0) {        \r\n                const remainingSeconds = generateHTML(\"SPAN\", \"task__date__duedate__field__time\", remainingTime.seconds);\r\n                const labelRemaningSeconds = generateHTML(\"P\", \"\", \"Seconds\");\r\n                const remainingFieldSeconds = generateHTML(\"DIV\", \"task__date__duedate__field\",\"\",\"\",\"\",remainingSeconds,labelRemaningSeconds);\r\n                dateDuedate.appendChild(remainingFieldSeconds);\r\n            }\r\n        \r\n            (remainingTime.days <= 0 && remainingTime.hours <= 0 && remainingTime.minutes <= 0 && remainingTime.seconds<= 0)? false : blockDates.appendChild(dateDuedate);\r\n        }\r\n        \r\n        return blockDates;\r\n    }\r\n    subBlockTitle = ()=>{\r\n     const contentTitle = generateHTML(\"SPAN\",\"\",cutText(this.title,getVariables.maxLengthViewport()));\r\n     const title = generateHTML(\"P\",\"\",\"Title\",\"\",\"\",contentTitle);\r\n     return title;\r\n    }\r\n    subBlockDescription = ()=>{\r\n        const contentDescription = generateHTML(\"SPAN\",\"\",cutText(this.description,getVariables.maxLengthViewport()));\r\n        const description = generateHTML(\"P\",\"\",\"Description\",\"\",\"\",contentDescription);\r\n        return description;\r\n    }\r\n    subBlockNotes = ()=>{\r\n        const notesImg = generateHTML(\"IMG\",\"task__notes__container__img\",\"\",iconAddNote,\"Icon Note\");\r\n        notesImg.loading=\"lazy\";\r\n        const titleNotes = generateHTML(\"P\",\"\",\"Notes\");\r\n        const notesContainer = generateHTML(\"DIV\",\"task__notes__container\");\r\n        const taskNotes = generateHTML(\"DIV\",\"task__notes\",\"\",\"\",\"\",titleNotes,notesContainer);\r\n        notesImg.dataset.action = getVariables.actions().addNote;\r\n        \r\n        if(this.status ===\"completed\"){\r\n            this.note.splice(0,this.note.length);\r\n            notesImg.classList.add(\"disabled__widget\");\r\n        }\r\n\r\n        if(this.note.length>=1){\r\n\r\n            this.note.forEach((note,index) => {\r\n                if(index<5){\r\n                    const contentNote = generateHTML(\"SPAN\",\"\",index+1);\r\n                    const notes = generateHTML(\"DIV\",\"task__notes__block__note\",\"\",\"\",\"\",contentNote);\r\n                    const imgDelete = generateHTML(\"IMG\",\"\",\"\",iconDeleteNotes,\"Icon Delete Notes\");\r\n                    const deleteNotes = generateHTML(\"DIV\",\"task__notes__block__delete\",\"\",\"\",\"\",imgDelete);\r\n                    const blockNote = generateHTML(\"DIV\",\"task__notes__block\",\"\",\"\",\"\",notes,deleteNotes);\r\n                    note.id = index+1;\r\n                    blockNote.dataset.id = note.id;\r\n                    notes.dataset.action = getVariables.actions().openNote;\r\n                    deleteNotes.dataset.action =getVariables.actions().deleteNote;\r\n\r\n                    if(note.isNew){\r\n                        blockNote.classList.add(\"appear\");\r\n                        note.isNew = false;\r\n                    };\r\n                    notesContainer.appendChild(blockNote); \r\n                }\r\n                else if(index === 5) {\r\n                    const more = generateHTML(\"IMG\",\"icon__note__more\",\"\",iconMore,\"Icon more notes\");\r\n                    note.countNote !== this.note.length && more.classList.add(\"appear\");\r\n                    notesContainer.appendChild(more)\r\n                }\r\n\r\n                note.countNote = this.note.length;\r\n            })\r\n            storage.setStorage(contentTask.getTask());\r\n\r\n        }\r\n       \r\n        notesContainer.append(notesImg);\r\n        return taskNotes;\r\n    }\r\n    blockInfo = ()=> generateHTML(\"DIV\",\"task__info\",\"\",\"\",\"\",this.subBlockDate(),this.subBlockTitle(),this.subBlockDescription(),this.subBlockNotes());\r\n    \r\n\r\n    completedResults = ()=>{\r\n        if(this.status ===\"completed\"){\r\n            const dateCompleted = generateHTML(\"SPAN\", \"\",this.dateCompleted);\r\n            const completedText = generateHTML(\"P\",\"task__completed__date\",\"Task Completed on: \",\"\",\"\",dateCompleted);\r\n            return completedText;\r\n        }\r\n        return \"\";\r\n       \r\n    }\r\n   \r\n    checkPriority = (priority)=>{\r\n        if(this.priority === 1){\r\n            priority.textContent = \"high\";\r\n            priority.style.backgroundColor = \"#fc412c\";\r\n        }\r\n        else if(this.priority ===2){\r\n            priority.textContent = \"medium\";\r\n            priority.style.backgroundColor = \"#ffae19\";\r\n        }\r\n        else if(this.priority === 3){\r\n            priority.textContent = \"low\";\r\n            priority.style.backgroundColor = \"#9ad4fa\";\r\n        }\r\n    }\r\n\r\n    priorityEL = ()=>{\r\n        if(this.status !==\"completed\"){\r\n            const priority = generateHTML(\"SPAN\",\"task__priority\",this.priority);\r\n            this.checkPriority(priority);\r\n            return priority;\r\n        }\r\n        return \"\";\r\n    }\r\n\r\n    create = ()=>{\r\n        const task = generateHTML(\"DIV\",\"task\",\"\",\"\",\"\",this.priorityEL(),this.completedResults(),this.blockInfo(),this.blockMenu());\r\n        task.dataset.id = this.id;\r\n        this.logicPropertiesCompleted(task);\r\n    \r\n        getVariables.containerTask.forEach(container => {\r\n            if(container.id === this.status){\r\n                container.appendChild(task);\r\n            }\r\n        })\r\n\r\n        if(this.isNew){\r\n            task.classList.add(\"task__anim\");\r\n            scrollToTarget(task);\r\n            this.isNew = false;\r\n            setTimeout(()=>task.classList.remove(\"task__anim\"),500);\r\n            storage.setStorage(contentTask.getTask());\r\n        }\r\n      \r\n    }\r\n\r\n    \r\n    delete = ()=>{\r\n        const filterTask = contentTask.getTask().filter(task => task.id !== this.id);\r\n        storage.setStorage(filterTask);\r\n        contentTask.getUpdateTask();\r\n    }\r\n\r\n    edit = (data)=>{\r\n        if(!data)return;\r\n       \r\n        for(const prop in data){\r\n            const propUpdate = prop.split(\"-\")[1];\r\n           \r\n            if(this.hasOwnProperty(propUpdate) && propUpdate !== \"date\"){\r\n               this[propUpdate] = data[prop];\r\n            }\r\n        }\r\n        contentTask.updateDataTask(); \r\n    }\r\n    \r\n    markAsCompleted= ()=>{\r\n        this.status = \"completed\";\r\n        this.dateCompleted = dateNotDay();\r\n        contentTask.updateDataTask();\r\n    }\r\n\r\n    \r\n    switchStatus= (value)=>{\r\n        if (this.status !== value) {  \r\n        \r\n        this.status = value;\r\n        contentTask.updateDataTask(); \r\n        }\r\n    }\r\n\r\n    switchPriority = (value)=>{\r\n        if(this.priority !== value) {  \r\n        this.priority = value;\r\n        contentTask.updateDataTask(); \r\n        }\r\n    }\r\n\r\n    dataPriority = ()=> [1,2,3].filter(num => num !== this.priority).map(num => {\r\n        if(num === 1)return \"High\";\r\n        if(num === 2)return \"Medium\";\r\n        if(num === 3)return \"Low\"; \r\n    });\r\n    \r\n    getStatus = ()=>{\r\n        return this.status;\r\n    }\r\n\r\n    setValueNew = (value)=>{\r\n        this.isNew = value;\r\n    }\r\n\r\n    pushNote = (input)=>{\r\n        if(input === \"\")return;\r\n        this.note.push({note:toUpper(input), isNew: true});\r\n        contentTask.updateDataTask();\r\n    }\r\n\r\n    deleteNote = (noteDOM)=>{\r\n        const filterTask = this.note.filter(note => note.id !== parseInt(noteDOM.dataset.id));\r\n        this.note = [...filterTask];\r\n        contentTask.updateDataTask();\r\n    }\r\n\r\n    viewNote = (noteDOM)=> this.note[this.note.findIndex(note => note.id === (parseInt(noteDOM.dataset.id)))].note;\r\n\r\n    getNotes = ()=> this.note.length;\r\n\r\n    logicPropertiesCompleted = (task)=>{\r\n        if(this.status ===\"completed\"){\r\n            this.duedate = \"\";\r\n            this.timeDuedate = \"\";\r\n            this.completedDuedate =\"\";\r\n            task.classList.add(\"task__completed\");\r\n        }\r\n        else if(this.status !== \"completed\" && this.dateCompleted){\r\n            this.dateCompleted = \"\";\r\n        }\r\n    }\r\n}","import  {storage}  from \"./storage\";\r\nimport { renderTask } from \"./interface\";\r\nimport Task from \"./Task\";\r\nimport { clearHTML } from \"./utilities\";\r\nimport variables from \"./variables\";\r\n\r\nconst task = (function(){\r\n\r\n    const myTask = []; \r\n    let isRendering = false;\r\n\r\n    const getTask = ()=> myTask;\r\n    const setTask = (task)=> myTask.push(task);\r\n\r\n    const printTask = (array = myTask)=>{\r\n        clearHTML(variables.containerTask);\r\n\r\n        if(array.length >= 1){\r\n            sortArray(array);\r\n\r\n            array.forEach(task =>{\r\n                task.create(); \r\n            })\r\n\r\n            checkRenderTime();\r\n        }\r\n    }\r\n\r\n    const getUpdateTask = ()=>{\r\n        storage.getStorage().length>= 1? myTask.splice(0,myTask.length,...storage.getStorage().map(task => new Task(task))) : myTask.splice(0,myTask.length);\r\n    };\r\n\r\n    const updateDataTask = ()=>{\r\n        storage.setStorage(myTask);\r\n        getUpdateTask();\r\n        printTask();\r\n    }\r\n\r\n    const checkRenderTime = ()=>{\r\n        isRendering = myTask.some(task => task.completedDuedate);\r\n        if(isRendering)renderTask();\r\n    }\r\n\r\n    const isRenderingControl = ()=> isRendering;\r\n   \r\n    const currentTask = (id)=> myTask[myTask.findIndex(task => task.id === parseInt(id))];\r\n    \r\n    const sortArray = (array)=>{\r\n        array.sort((a, b) => {\r\n            if (a.priority !== b.priority) {\r\n              return a.priority - b.priority;\r\n            }\r\n            const dateA = new Date(a.sortDate);\r\n            const dateB = new Date(b.sortDate);\r\n\r\n            return dateB.getTime() - dateA.getTime(); \r\n          });\r\n          \r\n    }\r\n    const clearTask = ()=> myTask.splice(0,myTask.length);\r\n\r\n    getUpdateTask();\r\n    return{getTask,setTask, printTask, currentTask, getUpdateTask, updateDataTask, isRenderingControl,clearTask}\r\n})();\r\n\r\nexport default task;","import variables from \"./variables\";\r\nimport contentTask from \"./content-task\";\r\nimport { adjustHeight, generateHTML, replaceClass,cutText, dateNotDay, disabledInputs, scrollToTarget,clearHTML,toUpper, getDataForm } from \"./utilities\";\r\nimport { editStyleStatus, showMessage, updateFormEdit } from \"./interface\";\r\n\r\n\r\nconst form = variables.formEdit;\r\nconst dateCompleted = variables.dateCompletedEdit;\r\nconst containerNotes = form.querySelector(\"#edit-container-notes\");\r\nconst resetDuedate = form.querySelector(\".form__edit__delete__duedate\");\r\nconst editDefaultMessage = document.getElementById(\"edit__default__message\");\r\nconst inputs = Object.keys(getDataForm(form)).map(prop => form[prop]).filter(input => input.id !== \"edit-status\");\r\n\r\n\r\nexport const loadTask = ()=>{\r\n    const currentTask = contentTask.currentTask(variables.modalEdit.dataset.task);\r\n    \r\n    loadProperties(currentTask);\r\n    \r\n    variables.formEdit.querySelectorAll(\"TEXTAREA\").forEach(area => {\r\n        adjustHeight(area,\"2rem\");\r\n    })\r\n\r\n    variables.subtmitBtnEdit.disabled = true;\r\n}\r\n\r\nconst loadProperties = (task)=>{\r\n    const data = getDataForm(form);\r\n\r\n    for(const prop in data){\r\n       \r\n        const updateProp =  prop.split(\"-\")[1];\r\n        if(task[updateProp] !== undefined){\r\n            form[prop].value = task[updateProp];\r\n        }\r\n      \r\n    }\r\n    loadNotes(task);\r\n    checkMoreInfo(task);\r\n}\r\n\r\nconst checkMoreInfo = (task)=>{\r\n    \r\n    if(task.status ===\"completed\"){\r\n        replaceClass(dateCompleted,\"disabled\",\"active\");     \r\n        dateCompleted.value = task.dateCompleted;\r\n        disabledInputs(inputs);\r\n        editDefaultMessage.textContent =\"*This task is marked as completed. To edit it, change its status\";\r\n    }\r\n    else{\r\n        replaceClass(dateCompleted,\"active\",\"disabled\");\r\n        const hasInputDisabled = inputs.every(input => input.classList.contains(\"disabled__input\"));\r\n\r\n        hasInputDisabled && inputs.forEach(input => input.classList.remove(\"disabled__input\"));\r\n        editDefaultMessage.textContent =\"*You can click on a property to edit it\";\r\n    }\r\n\r\n    if(task.completedDuedate){\r\n        replaceClass(resetDuedate,\"disabled\",\"active\");\r\n\r\n        resetDuedate.onclick = ()=>{\r\n            \r\n            if(form[\"edit-status\"].value ===\"completed\")return;\r\n            form[\"edit-duedate\"].value =\"\";\r\n            form[\"edit-timeDuedate\"].value =\"\";\r\n            task.completedDuedate = \"\";\r\n            variables.subtmitBtnEdit.disabled = false;\r\n        }\r\n    }\r\n    else{\r\n        replaceClass(resetDuedate,\"active\",\"disabled\");\r\n    }\r\n\r\n}\r\n\r\nconst loadNotes = (task)=>{\r\n\r\n    clearHTML(containerNotes,true);\r\n\r\n    if(task.note.length === 0){\r\n        const defaultNote = generateHTML(\"P\",\"form__edit__value form__edit__value__notes__defaut\",\"No notes stored\");\r\n        containerNotes.appendChild(defaultNote);\r\n    }\r\n    else{\r\n        task.note.forEach((note) => {\r\n           generateNote(note.note,note.id);\r\n        })\r\n    }\r\n    \r\n}\r\n\r\n\r\nconst validateForm = ()=>{\r\n    let isValid = true;\r\n    const inputs = [form[\"edit-title\"],form[\"edit-description\"]];\r\n   \r\n    inputs.forEach(input => {\r\n        if(input.value.trim() === \"\"){\r\n            showMessage(\"error\",input.parentElement,\"This field is required\");\r\n            isValid = false;\r\n        }\r\n    })\r\n    return isValid;\r\n}\r\n\r\n\r\nconst checkMaxValue = (text,target)=>{\r\n     if(target.id.includes(\"title\")){    \r\n        target.value = cutText(text,variables.maxLengthTitle(),true,target.parentElement);\r\n     }\r\n     else if(target.id.includes(\"description\")){     \r\n         target.value = cutText(text,variables.maxLengthDescription(),true,target.parentElement);\r\n     }\r\n     else if(target.classList.contains(\"note__edit\")){\r\n        target.value = cutText(text,variables.maxLengthNote(),true,target.parentElement);\r\n     }\r\n}\r\n\r\nexport const checkMaxValuePaste = (e)=>{\r\n    const target = e.target;\r\n    const currentScroll = form.scrollTop;\r\n    const scrollHeight = form.scrollHeight;\r\n    const clientHeight = form.clientHeight;\r\n\r\n    if (target.tagName === 'TEXTAREA') {\r\n     e.preventDefault();\r\n\r\n     let pastedText = e.clipboardData.getData('text');\r\n     let newText = target.value.slice(0, target.selectionStart) + pastedText + target.value.slice(target.selectionStart);\r\n    \r\n     checkMaxValue(newText,target);\r\n     adjustHeight(target);\r\n     fixScroll(currentScroll,scrollHeight,clientHeight);\r\n    }\r\n}\r\n\r\nconst fixScroll = (currentScroll,scrollHeight,clientHeight)=>{\r\n    const isNearBottom = scrollHeight - currentScroll - clientHeight < variables.offsetScroll;\r\n  \r\n    if (isNearBottom) {\r\n        form.scrollTop = scrollHeight;\r\n    }\r\n  }\r\n\r\n\r\nconst generateNote = (content,id)=>{\r\n    const noteEL = generateHTML(\"TEXTAREA\",\"form__edit__value note__edit\");\r\n    noteEL.value =  content;\r\n    const blockNote = generateHTML(\"div\",\"form__edit__value__note\",\"\",\"\",\"\",noteEL);\r\n    noteEL.dataset.id = id;\r\n    containerNotes.appendChild(blockNote);\r\n    return blockNote;\r\n}\r\n\r\nconst addNote = ()=>{\r\n    const dataID = containerNotes.querySelectorAll('[data-id]').length;\r\n    const messageDefault = containerNotes.querySelector(\".form__edit__value__notes__defaut\");\r\n    messageDefault && messageDefault.remove();\r\n\r\n    const newNote = generateNote(\"Write your note here!\", dataID + 1);\r\n    newNote && newNote.classList.add(\"appearNote\");\r\n\r\n    adjustHeight(newNote.firstChild);\r\n    scrollToTarget(newNote);\r\n}\r\n\r\nconst editTask = ()=>{\r\n    \r\n    const data = getDataForm(form);\r\n    const notesEdit = containerNotes.querySelectorAll('[data-id]');\r\n    \r\n    if(notesEdit.length > 0){\r\n        data[\"edit-note\"] = [];\r\n\r\n        notesEdit.forEach((note) => {\r\n            if(note.value !== \"\"){\r\n                data[\"edit-note\"].push({note: toUpper(note.value), isNew: true});\r\n            }\r\n        });\r\n    }\r\n\r\n    const currentTask = contentTask.currentTask(variables.modalEdit.dataset.task);\r\n    currentTask.setValueNew(true);\r\n    currentTask.edit(data);\r\n}\r\n\r\nexport const handleModalInput = (e)=>{\r\n   \r\n    const target = e.target;\r\n    const currentScroll = form.scrollTop;\r\n    const scrollHeight = form.scrollHeight;\r\n    const clientHeight = form.clientHeight;\r\n\r\n    if(target.matches(\"TEXTAREA\")){\r\n        adjustHeight(e.target);\r\n    }\r\n\r\n    checkMaxValue(target.value,target);\r\n\r\n    if(variables.subtmitBtnEdit.disabled){\r\n        variables.subtmitBtnEdit.disabled = false;\r\n    }\r\n    \r\n    fixScroll(currentScroll,scrollHeight,clientHeight);\r\n}\r\n\r\nexport const handleModalActions = (e)=>{\r\n    if(e.target === variables.subtmitBtnEdit){\r\n        if(!validateForm())return;\r\n        editTask();\r\n        updateFormEdit();\r\n    }\r\n    else if(e.target === variables.addNoteEdit && form[\"edit-status\"].value!==\"completed\"){     \r\n        addNote();\r\n    }\r\n  \r\n}\r\n\r\n\r\n\r\nconst changesForm = (target)=>{\r\n    \r\n    if(target.value ===\"completed\"){\r\n\r\n        if (target.value === \"completed\") {\r\n            const newDateCompleted = dateNotDay();\r\n\r\n            dateCompleted.value = newDateCompleted;\r\n            form[\"edit-duedate\"].value = \"\";\r\n            form[\"edit-timeDuedate\"].value = \"\";\r\n            disabledInputs(inputs);\r\n\r\n            dateCompleted.classList.contains(\"disabled\") && replaceClass(dateCompleted, \"disabled\", \"active\"); \r\n            \r\n            editDefaultMessage.textContent =\"*This task is marked as completed. To edit it, change its status\";\r\n        } \r\n    }\r\n    else {\r\n     \r\n        if (dateCompleted.classList.contains(\"active\")) {\r\n            replaceClass(dateCompleted, \"active\", \"disabled\");\r\n            inputs.forEach(input => input.classList.remove(\"disabled__input\"));\r\n            dateCompleted.value = \"\";\r\n            editDefaultMessage.textContent =\"*You can click on a property to edit it\";\r\n        }\r\n    }\r\n   \r\n}\r\n\r\nexport const observerChanges = (e)=>{\r\n   \r\n    if(e.target.id ===\"edit-status\"){\r\n        editStyleStatus(e.target.value);\r\n        changesForm(e.target);\r\n    }\r\n}\r\n\r\n       ","import variables from \"./variables\";\r\nimport { showMessage, updateFormSucces } from \"./interface\";\r\nimport arrayTask from \"./content-task\";\r\nimport Task from \"./Task\";\r\nimport { toUpper, cutText, getDataForm } from \"./utilities\";\r\n\r\n\r\nconst validateForm = (data) => {\r\n    let isValid = true;\r\n    \r\n    const requiredProps = [variables.properties().title, variables.properties().description, variables.properties().priority];\r\n\r\n    requiredProps.forEach(input => {\r\n        if(data[input] === \"\" || data[input] === undefined){\r\n\r\n            const fieldValidate = (input === variables.properties().priority)\r\n            ? variables.form.querySelector('input[name=\"priority\"]').parentElement.parentElement.parentElement\r\n            : variables.form[input].parentElement;\r\n\r\n            showMessage(\"error\", fieldValidate, \"This field is required\");\r\n            isValid = false;\r\n    }\r\n        \r\n    })\r\n\r\n    return isValid;\r\n}\r\n\r\nexport const validateLength = (e)=>{\r\n    const target = e.target;\r\n    if(target.id.includes(\"title\")){    \r\n        target.value = cutText(target.value,variables.maxLengthTitle(),true,target.parentElement);\r\n     }\r\n     else if(target.id.includes(\"description\")){     \r\n         target.value = cutText(target.value,variables.maxLengthDescription(),true,target.parentElement);\r\n       \r\n     }\r\n     else if(target.id.includes(\"note\")){\r\n        target.value = cutText(target.value,variables.maxLengthNote(),true,target.parentElement);\r\n     }\r\n\r\n}\r\n\r\nexport const handleForm = (e)=>{\r\n    e.preventDefault();\r\n    \r\n    const data = getDataForm(e.target);\r\n    data.note = (data.note !==\"\")? [{note:toUpper(variables.form.note.value.trim()), isNew: true}] : [];\r\n    \r\n    \r\n    if(!validateForm(data))return;\r\n   \r\n    arrayTask.setTask(new Task(data));\r\n    arrayTask.updateDataTask();\r\n    updateFormSucces();\r\n}\r\n","import variables from \"./variables\";\r\nimport { handleForm,validateLength } from \"./form\";\r\nimport { handleModalInput,checkMaxValuePaste, handleModalActions,observerChanges } from \"./form-edit\";\r\n\r\nconst eventHandle = (()=>{\r\n\r\n    const event = {\r\n      \r\n        registerEventsForm : ()=>{\r\n            variables.form.addEventListener(\"submit\", handleForm);\r\n            variables.form.addEventListener(\"input\", validateLength);\r\n        },\r\n        removeEventsForm : ()=>{\r\n            variables.form.removeEventListener(\"submit\", handleForm);\r\n            variables.form.removeEventListener(\"input\", validateLength);\r\n        },\r\n    \r\n        \r\n        registerEventsEdit : ()=>{\r\n            variables.modalEdit.addEventListener(\"click\",handleModalActions);\r\n            variables.formEdit.addEventListener(\"input\",handleModalInput);\r\n            variables.formEdit.addEventListener(\"paste\",checkMaxValuePaste);\r\n            variables.formEdit.addEventListener(\"change\",observerChanges);\r\n            \r\n        },\r\n        removeEventsEdit : ()=>{\r\n            variables.modalEdit.removeEventListener(\"click\",handleModalActions);\r\n            variables.formEdit.removeEventListener(\"input\",handleModalInput);\r\n            variables.formEdit.removeEventListener(\"paste\",checkMaxValuePaste);\r\n            variables.formEdit.removeEventListener(\"change\",observerChanges);\r\n        },\r\n    }\r\n  \r\n    return {event};\r\n})();\r\n\r\nexport default eventHandle;","import { showMessage,defaultMessage,editStyleStatus } from \"./interface\";\r\nimport { toUpper,replaceClass,activeEl,scrollToTarget,waitFor } from \"./utilities\";\r\nimport variables from \"./variables\";\r\nimport {loadTask} from \"./form-edit\";\r\nimport eventHandle from \"./event-handle\";\r\nimport task from \"./content-task\";\r\n\r\nconst actions = (()=>{\r\n\r\n    const genericFunctionAction = (el,text, callback = ()=>{},clase = \"task__remove\")=>{\r\n        if(el)el.classList.add(clase);\r\n        showMessage(\"notification\", document.body, text);\r\n        callback();\r\n     }\r\n\r\n     const genericFunctionActionSetTimeOut = (selectedTask,callback = ()=>{})=>{\r\n        selectedTask.setValueNew(true);\r\n        callback();\r\n     }\r\n\r\n\r\n     const checkButtonPriority = (data,btn)=>{\r\n        switch(data){\r\n            case 1:\r\n            btn.classList.add(\"btn__priority__hight\");\r\n            break;\r\n    \r\n            case 2:\r\n            btn.classList.add(\"btn__priority__medium\");\r\n            break;\r\n    \r\n            case 3:\r\n            btn.classList.add(\"btn__priority__low\");\r\n            break;\r\n        }\r\n    }\r\n\r\n    const action = {\r\n\r\n        openMenu: ({target})=>{\r\n            const hasMenuOpen = variables.board.querySelector(\".actived-menu\");\r\n            if(!hasMenuOpen){\r\n                const menu = target.nextElementSibling;\r\n                replaceClass(menu,\"disabled\",\"actived-menu\");\r\n            }\r\n            else if(hasMenuOpen){\r\n                replaceClass(hasMenuOpen,\"actived-menu\",\"disabled\");\r\n            }\r\n        },\r\n\r\n        view: ({selectedTask})=>{\r\n            variables.modalEdit.dataset.task = selectedTask.id;\r\n            activeEl(variables.modalEdit);\r\n            activeEl(variables.overlay);\r\n            editStyleStatus(selectedTask.status);\r\n            loadTask();\r\n            eventHandle.event.registerEventsEdit();\r\n        },\r\n\r\n        completed: ({modalConfirm,task,selectedTask}) => {\r\n            modalConfirm(\r\n                \"Do you want to mark this task as completed?\", \"Yes\", \"Cancel\",\r\n                async () => {\r\n                    genericFunctionAction(task, \"Task marked as completed!\");\r\n                    await waitFor(1000);  \r\n                    genericFunctionActionSetTimeOut(selectedTask, () => selectedTask.markAsCompleted());\r\n                },\r\n                () => {}\r\n            );\r\n        },\r\n        \r\n        deleteTask: ({modalConfirm,task,selectedTask}) => {\r\n            modalConfirm(\r\n                \"Are you sure you want to delete this task?\", \"Yes\", \"Cancel\",\r\n                async () => {\r\n                    genericFunctionAction(task, \"Task removed from the dashboard!\", () => selectedTask.delete(task));\r\n                    await waitFor(1000);\r\n                    task.remove();\r\n                    defaultMessage();\r\n                },\r\n                () => {}\r\n            );\r\n        },\r\n        \r\n        switchStatus: ({modalConfirm,task,selectedTask}) => {\r\n            modalConfirm(\r\n                \"Which status would you like to assign?\", \"Pending\", \"In Progress\",\r\n                async () => {\r\n                    if (selectedTask.getStatus() === variables.pending()) return;\r\n                    genericFunctionAction(task, `Task status changed to ${toUpper(variables.pending())}!`);\r\n                    await waitFor(1000);\r\n                    genericFunctionActionSetTimeOut(selectedTask, () => selectedTask.switchStatus(variables.pending()));\r\n                },\r\n                async () => {\r\n                    if (selectedTask.getStatus() === variables.progress()) return;\r\n                    genericFunctionAction(task, `Task status changed to In ${toUpper(variables.progress())}!`);\r\n                    await waitFor(1000);\r\n                    genericFunctionActionSetTimeOut(selectedTask, () => selectedTask.switchStatus(variables.progress()));\r\n                },\r\n                \"btn__modify__status\"\r\n            );\r\n        },\r\n    \r\n        switchPriority: ({modalConfirm,task,selectedTask}) => {\r\n            const whichPriority = selectedTask.dataPriority();\r\n            const dataPriority = whichPriority.map(priority => {\r\n                if (priority === \"High\") return 1;\r\n                if (priority === \"Medium\") return 2;\r\n                if (priority === \"Low\") return 3;\r\n            });\r\n\r\n            modalConfirm(\r\n                \"What new priority would you like to assign?\", whichPriority[0], whichPriority[1],\r\n                async () => {\r\n                    genericFunctionAction(task, `The priority has been changed to ${whichPriority[0]}!`);\r\n                    await waitFor(1000);\r\n                    genericFunctionActionSetTimeOut(selectedTask, () => selectedTask.switchPriority(dataPriority[0]));\r\n                },\r\n                async () => {\r\n                    genericFunctionAction(task, `The priority has been changed to ${whichPriority[1]}!`);\r\n                    await waitFor(1000);\r\n                    genericFunctionActionSetTimeOut(selectedTask, () => selectedTask.switchPriority(dataPriority[1]));\r\n                },\r\n                undefined,\r\n                true,\r\n                (primaryButton) => checkButtonPriority(dataPriority[0], primaryButton),\r\n                (secondaryButton) => checkButtonPriority(dataPriority[1], secondaryButton)\r\n            );\r\n        },\r\n\r\n        addNote: ({modalNotes,selectedTask})=>{\r\n            modalNotes(selectedTask);\r\n        },\r\n\r\n        openNote: ({popupNotes,note,selectedTask})=>{\r\n            popupNotes(selectedTask.viewNote(note));\r\n        },\r\n\r\n        deleteNote: ({modalConfirm,note,selectedTask}) => {\r\n            modalConfirm(\r\n                \"Are you sure you want to delete this note?\", \"Yes\", \"Cancel\",\r\n                async () => {\r\n                    genericFunctionAction(note, \"Note removed from the dashboard!\",\"\",\"disappear\");\r\n                    await waitFor(1000);\r\n                    selectedTask.deleteNote(note);\r\n                },\r\n                () => {}\r\n            );\r\n        },\r\n\r\n        addTask: ()=>{\r\n            activeEl(variables.modal);\r\n            activeEl(variables.overlay);\r\n            eventHandle.event.registerEventsForm();\r\n        },\r\n        goTop: ()=>{\r\n           scrollToTarget(variables.btnAdd);\r\n        },\r\n        clearBoard: (modalConfirm)=>{\r\n            if(task.getTask().length <= 0)return;\r\n            modalConfirm(\r\n                \"Are you sure you want to clear your board? All your tasks will be removed\", \"Yes\", \"Cancel\",\r\n                async () => {\r\n                    genericFunctionAction(\"\", \"All the notes have been removed from the dashboard!\",async()=>{\r\n                        await waitFor(500);\r\n                        task.clearTask();\r\n                        task.updateDataTask();\r\n                        defaultMessage();\r\n                    });\r\n                },\r\n                () => {}\r\n            );\r\n           \r\n           \r\n        },\r\n        resetFilter: ()=>{\r\n            const hasFilter = Array.from(variables.formFilter.querySelectorAll(\"SELECT\")).some(select => select.value !==\"\");\r\n            \r\n            if(!hasFilter)return;\r\n            variables.formFilter.reset();\r\n            task.printTask();\r\n        },\r\n    };\r\n\r\n    const getAction = ()=> action;\r\n\r\n    return {getAction};\r\n})();\r\nexport default actions;","import variables from \"./variables\";\r\nimport contenTask from \"./content-task\";\r\nimport { desactivedEl,activeEl, replaceClass,generateHTML,calculateRemainingTime,dateNotDay,cutText,waitFor, clearHTML} from \"./utilities\";\r\nimport dataAction from \"./handle-action\";\r\nimport eventHandle from \"./event-handle\";\r\n\r\n\r\n\r\nconst animatedModalGeneric = (modal)=>{\r\n    modal.classList.toggle(\"modal__anim__close\");\r\n    variables.overlay.classList.toggle(\"overlay__close\");\r\n\r\n    setTimeout(()=>{\r\n        modal.classList.toggle(\"modal__anim__close\");\r\n        variables.overlay.classList.toggle(\"overlay__close\");\r\n        desactivedEl(variables.overlay);\r\n        desactivedEl(modal);\r\n        const hasMessage = modal.querySelectorAll(\".error\");\r\n        if(hasMessage.length>0) hasMessage.forEach(message => message.remove());\r\n        \r\n        if(modal === variables.modal){\r\n            variables.form.reset();\r\n            eventHandle.event.removeEventsForm();\r\n            return;\r\n        }\r\n        else if(modal === variables.modalEdit){\r\n            eventHandle.event.removeEventsEdit();\r\n            return;\r\n        }\r\n        else{\r\n            modal.remove();\r\n        }\r\n        \r\n    },300);\r\n}\r\n\r\nexport const showMessage = (type, container, content)=>{\r\n   \r\n    const hasMessage = container.querySelector(\".error\") || container.querySelector(\".notification\");\r\n\r\n    if(hasMessage) hasMessage.remove();\r\n    \r\n    const message = document.createElement(\"P\");\r\n\r\n    switch(type){\r\n        case \"error\":\r\n        message.classList.add(\"error\");\r\n        break;\r\n\r\n        case \"notification\":\r\n        message.classList.add(\"notification\");\r\n        break;\r\n    }\r\n    message.textContent = content;\r\n    setTimeout(()=>message.remove(),4000);\r\n    container.appendChild(message);\r\n}\r\n\r\nconst updateDate = ()=>{\r\n    const today = new Date();\r\n\r\n    const maxDate = new Date();\r\n    maxDate.setFullYear(today.getFullYear()+1);\r\n\r\n    const dateMin = today.toISOString().split('T')[0];\r\n    const dateMax = maxDate.toISOString().split('T')[0];\r\n\r\n    variables.form.duedate.setAttribute(\"min\",dateMin);\r\n    variables.form.duedate.setAttribute(\"max\",dateMax);\r\n    variables.formEdit[\"edit-duedate\"].setAttribute(\"min\",dateMin);\r\n    variables.formEdit[\"edit-duedate\"].setAttribute(\"max\",dateMax);\r\n}\r\n\r\nexport const updateFormSucces = ()=>{\r\n    variables.form.reset();\r\n    showMessage(\"notification\",document.body,\"Task added successfully!\");\r\n    animatedModalGeneric(variables.modal);\r\n    defaultMessage();\r\n}\r\nexport const updateFormEdit = ()=>{\r\n    showMessage(\"notification\",document.body,\"Task edited successfully!\");\r\n    animatedModalGeneric(variables.modalEdit);\r\n}\r\n\r\nexport const editStyleStatus = (status)=>{\r\n  status === \"completed\" \r\n  ? variables.modalEdit.classList.add(\"update__modal__edit\") \r\n  : variables.modalEdit.classList.contains(\"update__modal__edit\") && variables.modalEdit.classList.remove(\"update__modal__edit\");\r\n    \r\n}\r\n\r\n\r\nconst modalNotes = (task)=>{\r\n    activeEl(variables.overlay);\r\n    \r\n    const notesCount = task.getNotes();\r\n    const btnClose = generateHTML(\"SPAN\",\"modal__notes__close\",\"X\");\r\n    const title = generateHTML(\"P\",\"modal__notes__text\");\r\n    const area = generateHTML(\"TEXTAREA\");\r\n    const btnSave = generateHTML(\"BUTTON\",\"btn\",\"Save Note\");\r\n    const divBtn = generateHTML(\"DIV\",\"modal__notes__btn\",\"\",\"\",\"\",btnSave);\r\n    area.placeholder = \"Write your note here!\";\r\n    title.textContent= task.getNotes()>= 1? `Currently, you have ${notesCount} notes saved. Would you like one more?` : \"Currently, you don't have any notes saved. Would you like to add your first note?\";\r\n    const modalElement = generateHTML(\"DIV\",\"modal__notes\",\"\",\"\",\"\",btnClose,title,area,divBtn);\r\n    area.oninput = ()=>{\r\n        area.value = cutText(area.value,variables.maxLengthNote(),true,divBtn);\r\n    }\r\n    btnSave.onclick = ()=>{\r\n        \r\n        if(area.value.trim() !== \"\"){\r\n            \r\n            task.pushNote(area.value.trim());\r\n            animatedModalGeneric(modalElement);\r\n            showMessage(\"notification\",document.body,\"Note successfully added to this task!\");   \r\n        }\r\n        else{\r\n            showMessage(\"error\",divBtn,\"This field is requerid\");\r\n        }\r\n        \r\n    }\r\n    btnClose.onclick = ()=> {\r\n        animatedModalGeneric(modalElement);\r\n    }\r\n    document.body.appendChild(modalElement);\r\n}\r\n\r\nconst popupNotes = (note)=>{\r\n    activeEl(variables.overlay);\r\n    const content = generateHTML(\"P\",\"modal__notes__text modal__notes__text__popup\",note);\r\n    const btnClose = generateHTML(\"SPAN\",\"modal__notes__close\",\"X\");\r\n    const modalElement = generateHTML(\"DIV\",\"modal__notes modal__notes__modify\",\"\",\"\",\"\",content,btnClose);\r\n\r\n    btnClose.onclick = ()=> {\r\n        animatedModalGeneric(modalElement);\r\n    }\r\n    document.body.appendChild(modalElement);\r\n}\r\n\r\nconst modalConfirm = (ask, btnText1, btnText2, callbackPrimary,callbackSecondary, clas = \"\",priority = false,refPrimaryButton = null,refSecondaryButton = null)=>{\r\n    activeEl(variables.overlay);\r\n    \r\n    const askText = generateHTML(\"P\",\"\",ask);\r\n    const btnPrimary = generateHTML(\"BUTTON\",\"btn modal__confirm__btn__yes\",btnText1);\r\n    const btnSecondary = generateHTML(\"BUTTON\",`btn modal__confirm__btn__cancel ${clas}`,btnText2);\r\n    const btnClose = generateHTML(\"SPAN\",\"modal__confirm__close\",\"X\");\r\n    const groupBtn = generateHTML(\"DIV\",\"modal__confirm__btn\",\"\",\"\",\"\",btnPrimary,btnSecondary);\r\n    const modalElement = generateHTML(\"DIV\",\"modal__confirm\",\"\",\"\",\"\",askText,groupBtn,btnClose);\r\n\r\n    if(priority){\r\n        refPrimaryButton(btnPrimary);\r\n        refSecondaryButton(btnSecondary);    \r\n    }\r\n  \r\n    btnPrimary.onclick =()=> {\r\n        callbackPrimary(btnPrimary);\r\n        animatedModalGeneric(modalElement);\r\n    }\r\n    btnSecondary.onclick = ()=> {\r\n        callbackSecondary(btnSecondary);\r\n        animatedModalGeneric(modalElement);\r\n    }\r\n    btnClose.onclick = ()=> {\r\n        animatedModalGeneric(modalElement);\r\n    }\r\n    document.body.appendChild(modalElement);\r\n}\r\n\r\n\r\n\r\nexport const defaultMessage = ()=>{\r\n    contenTask.getTask().length >= 1? variables.defaultMessage.className = \"disabled\": variables.defaultMessage.className = \"active\";\r\n}\r\n\r\n\r\nlet frameCount = 0;  \r\nexport const renderTask = () => {\r\n   \r\n  if (frameCount >= 60) {\r\n    let hasUpdated = false; \r\n\r\n    contenTask.getTask().forEach(task => {\r\n      if (task.completedDuedate) {\r\n        const remainingTime = calculateRemainingTime(task.completedDuedate);\r\n      \r\n        if (remainingTime.days <= 0 && remainingTime.hours <= 0 && remainingTime.minutes <= 0 && remainingTime.seconds <= 0) {\r\n          task.status = \"completed\";\r\n          task.dateCompleted = dateNotDay();\r\n          task.setValueNew(true);\r\n        \r\n          showMessage(\"notification\", document.body, `Task ${cutText(task.title, 10)} has expired and has been marked as completed`);\r\n          hasUpdated = true;\r\n        }\r\n      }\r\n    });\r\n\r\n    \r\n    if (hasUpdated) {\r\n      contenTask.updateDataTask();\r\n    }\r\n\r\n    frameCount = 0;\r\n  }\r\n\r\n  \r\n  frameCount++;\r\n  \r\n  if(contenTask.isRenderingControl()){\r\n    requestAnimationFrame(renderTask);\r\n  }\r\n  \r\n};\r\n\r\nconst loaderHeaderAnimation = async()=>{\r\n    const text1 = \"Your task manager\";\r\n    const text2 = \"Create and manage\";\r\n    const text3 = \"Achieve your goals\";\r\n   \r\n    const animationText = (text,el)=>{\r\n        \r\n        for(let i =0; i< text.length; i++){\r\n            setTimeout(()=>{\r\n                const letter = document.createElement('span');  \r\n                letter.textContent = text[i];\r\n                letter.classList.add('appear');  \r\n                el.appendChild(letter);  \r\n              \r\n            },30 * i);\r\n        }\r\n        \r\n    }\r\n\r\n    animationText(text1,variables.titlesHeader[0]);\r\n    await waitFor(text1.length *30);\r\n    animationText(text2,variables.titlesHeader[1]);\r\n    await waitFor(text2.length *30);\r\n    animationText(text3,variables.titlesHeader[2]);\r\n    await waitFor(text3.length * 150);\r\n    clearHTML(variables.titlesHeader);\r\n    variables.titlesHeader[0].textContent = text1;\r\n    variables.titlesHeader[1].textContent = text2;\r\n    variables.titlesHeader[2].textContent = text3;\r\n}\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\",registerInit);\r\nfunction registerInit(){\r\n    loaderHeaderAnimation();\r\n    defaultMessage();\r\n    updateDate();\r\n    contenTask.printTask();\r\n    variables.board.addEventListener(\"click\",handleBoard);\r\n    document.body.addEventListener(\"click\",handleViewport);\r\n    variables.boardPanel.addEventListener(\"click\",handleBoardPanel);\r\n}\r\n\r\nconst handleBoard = (e)=>{\r\n    const target = e.target;\r\n    const task = target.closest(\".task\");\r\n    if(!task)return;\r\n\r\n    const actionType = target.dataset?.action || target.closest('[data-action]')?.dataset?.action || \"\";\r\n    const selectedTask = contenTask.currentTask(task.dataset.id);\r\n    const actions = dataAction.getAction();\r\n\r\n    if(task && !actionType) actions.view({selectedTask});\r\n    if(!actionType)return;\r\n    if(!actions.hasOwnProperty(actionType))return;\r\n\r\n    const note = target.closest(\".task__notes__block\") || \"\";\r\n    actions[actionType]({modalConfirm,popupNotes,modalNotes, target,task,selectedTask, note});\r\n    \r\n }\r\n\r\n const handleViewport = (e)=>{\r\n    const hasMenuOpen = variables.board.querySelector(\".actived-menu\");\r\n    const target = e.target;\r\n   \r\n    if(hasMenuOpen && target.dataset.action !== variables.actions().openMenu){\r\n        replaceClass(hasMenuOpen,\"actived-menu\",\"disabled\");\r\n    }\r\n\r\n    if(target){\r\n        if(target === variables.overlay){\r\n            const modalConfirm = document.querySelector(\".modal__confirm\");\r\n            const popupNotes= document.querySelector(\".modal__notes\");\r\n            variables.modal.style.display === \"block\" &&  animatedModalGeneric(variables.modal); \r\n            variables.modalEdit.style.display === \"block\" && animatedModalGeneric(variables.modalEdit); \r\n            modalConfirm && animatedModalGeneric(modalConfirm);\r\n            popupNotes &&  animatedModalGeneric(popupNotes);\r\n        } \r\n                \r\n        if(target === variables.btnAdd){\r\n            activeEl(variables.modal);\r\n            activeEl(variables.overlay);\r\n            eventHandle.event.registerEventsForm();\r\n        }\r\n        \r\n        if(variables.modal.style.display === \"block\"){\r\n            target.classList.contains(\"modal__close\") && animatedModalGeneric(variables.modal) \r\n        }\r\n        if(variables.modalEdit.style.display === \"block\"){\r\n            target.classList.contains(\"modal__close\") && animatedModalGeneric(variables.modalEdit); \r\n        }\r\n        \r\n\r\n    }\r\n    else{return};   \r\n}\r\n \r\nconst handleBoardPanel = (e)=>{\r\n    const target = e.target;\r\n   \r\n\r\n    const actionType = target.dataset?.action || target.closest('[data-action]')?.dataset?.action || \"\";\r\n    const actions = dataAction.getAction();\r\n\r\n    \r\n    if(!actionType)return;\r\n    if(!actions.hasOwnProperty(actionType))return;\r\n\r\n  \r\n    actions[actionType](modalConfirm);\r\n    \r\n}","import variables from \"./variables\";\r\nimport task from \"./content-task\";\r\nimport { showMessage } from \"./interface\";\r\n\r\n\r\nconst status = task => (variables.formFilter.filterStatus.value || task.status) === task.status;\r\nconst priority = task => (Number(variables.formFilter.filterPriority.value) || task.priority) === task.priority;\r\n\r\nconst date = (task) => {\r\n    const selectedFilter = variables.formFilter.filterDate.value;\r\n  \r\n    const taskDate = new Date(task.sortDate).setHours(0, 0, 0, 0); \r\n    const currentDate = new Date().setHours(0, 0, 0, 0); \r\n\r\n   \r\n    const sevenDaysAgo = new Date(currentDate);\r\n    sevenDaysAgo.setDate(sevenDaysAgo.getDate() - 7); \r\n\r\n    const thirtyDaysAgo = new Date(currentDate);\r\n    thirtyDaysAgo.setDate(thirtyDaysAgo.getDate() - 30); \r\n\r\n    switch (selectedFilter) {\r\n        case \"today\":\r\n            return taskDate === currentDate;\r\n           \r\n        case \"week\":\r\n            console.log(sevenDaysAgo);\r\n            return taskDate >= sevenDaysAgo && taskDate <= currentDate;\r\n\r\n        case \"month\":\r\n            return taskDate >= thirtyDaysAgo && taskDate <= currentDate;\r\n\r\n        case \"before-month\":\r\n            return taskDate < thirtyDaysAgo;\r\n\r\n        default:\r\n            return true; \r\n    }\r\n};\r\n\r\n\r\nconst filterResult = ()=>{\r\n    if(task.getTask().length === 0)return;\r\n    const results = task.getTask().filter(status).filter(priority).filter(date);\r\n    \r\n    results.length === 0 && showMessage(\"notification\",document.body,\"No results found. Try another search or reset the filters\");\r\n\r\n    task.printTask(results);\r\n}\r\n\r\nvariables.formFilter.addEventListener(\"change\", filterResult);\r\n\r\n\r\n"],"names":["__webpack_require__","g","globalThis","this","Function","e","window","scriptUrl","importScripts","location","document","currentScript","tagName","toUpperCase","src","scripts","getElementsByTagName","length","i","test","Error","replace","p","getVariables","board","getElementById","form","modal","modalEdit","formEdit","querySelector","btnCloseModal","overlay","btnAdd","containerTask","querySelectorAll","defaultMessage","addNoteEdit","subtmitBtnEdit","dateCompletedEdit","boardPanel","formFilter","titlesHeader","PROPERTIES","title","description","priority","duedate","timeDuedate","status","note","ACTIONS","openMenu","view","completed","deleteTask","switchStatus","switchPriority","addNote","openNote","deleteNote","maxLengthViewport","maxLengthTitle","maxLengthDescription","key","pending","progress","actions","maxLengthNote","offsetScroll","properties","storage","JSON","parse","localStorage","getItem","variables","value","setItem","stringify","toUpper","el","charAt","slice","activeEl","style","display","desactivedEl","replaceClass","currentClass","newClass","classList","disabledInputs","inputs","forEach","input","add","cutText","text","max","edit","container","showMessage","trim","waitFor","ms","Promise","resolve","setTimeout","adjustHeight","height","scrollHeight","scrollToTarget","target","scrollIntoView","behavior","block","generateHTML","clase","content","alt","childs","item","createElement","className","textContent","append","clearHTML","firstChild","removeChild","childElementCount","dateNotDay","Date","toLocaleDateString","undefined","year","month","day","calculateRemainingTime","dateString","currentDate","targetDate","includes","toDateString","setHours","isNaN","days","hours","minutes","seconds","currentTime","getTime","remTime","Math","floor","minutesRemaining","hoursRemaining","getDataForm","data","Object","fromEntries","FormData","Task","constructor","id","date","dateCompleted","isNew","completedDuedate","sortDate","parseInt","now","formattedDate","weekday","formattedTime","toLocaleTimeString","hour","minute","second","hour12","menuView","imgInfo","loading","infoView","menuFieldView","dataset","action","menuStatus","infoStatus","imgToggleStatus","menuFieldStatus","menuPriority","infoPriority","imgPriority","menuFieldPriority","menuCompleted","imgCompleted","infoCompleted","menuFieldCompleted","menuRemove","imgDelete","infoDelete","menuFieldRemove","blockMenu","imgModalTask","taskModalMenu","taskModal","subBlockDate","contentDateAdded","dateAdded","divDataAdded","blockDates","dateDuedate","remainingTime","remainingDays","labelRemaningDays","remainingFieldDays","remainingHours","labelRemaningHours","remainingFieldHours","appendChild","remainingMinutes","labelRemaningMinutes","remainingFieldMinutes","remainingSeconds","labelRemaningSeconds","remainingFieldSeconds","subBlockTitle","contentTitle","subBlockDescription","contentDescription","subBlockNotes","notesImg","titleNotes","notesContainer","taskNotes","splice","index","contentNote","notes","deleteNotes","blockNote","more","countNote","getTask","blockInfo","completedResults","checkPriority","backgroundColor","priorityEL","create","task","logicPropertiesCompleted","remove","delete","filterTask","filter","getUpdateTask","prop","propUpdate","split","hasOwnProperty","updateDataTask","markAsCompleted","dataPriority","num","map","getStatus","setValueNew","pushNote","push","noteDOM","viewNote","findIndex","getNotes","myTask","isRendering","printTask","array","sortArray","checkRenderTime","some","renderTask","sort","a","b","dateA","setTask","currentTask","isRenderingControl","clearTask","containerNotes","resetDuedate","editDefaultMessage","keys","checkMoreInfo","every","contains","onclick","disabled","loadNotes","defaultNote","generateNote","checkMaxValue","parentElement","checkMaxValuePaste","currentScroll","scrollTop","clientHeight","preventDefault","pastedText","clipboardData","getData","newText","selectionStart","fixScroll","noteEL","handleModalInput","matches","handleModalActions","isValid","validateForm","notesEdit","editTask","updateFormEdit","dataID","messageDefault","newNote","observerChanges","editStyleStatus","newDateCompleted","changesForm","validateLength","handleForm","fieldValidate","updateFormSucces","registerEventsForm","addEventListener","removeEventsForm","removeEventListener","registerEventsEdit","removeEventsEdit","genericFunctionAction","callback","body","genericFunctionActionSetTimeOut","selectedTask","checkButtonPriority","btn","hasMenuOpen","menu","nextElementSibling","updateProp","loadProperties","area","modalConfirm","async","whichPriority","primaryButton","secondaryButton","modalNotes","popupNotes","addTask","goTop","clearBoard","resetFilter","Array","from","select","reset","getAction","animatedModalGeneric","toggle","hasMessage","message","type","notesCount","btnClose","btnSave","divBtn","placeholder","modalElement","oninput","ask","btnText1","btnText2","callbackPrimary","callbackSecondary","clas","refPrimaryButton","refSecondaryButton","askText","btnPrimary","btnSecondary","groupBtn","frameCount","hasUpdated","requestAnimationFrame","text1","text2","text3","animationText","letter","loaderHeaderAnimation","today","maxDate","setFullYear","getFullYear","dateMin","toISOString","dateMax","setAttribute","updateDate","handleBoard","handleViewport","handleBoardPanel","closest","actionType","filterStatus","Number","filterPriority","selectedFilter","filterDate","taskDate","sevenDaysAgo","setDate","getDate","thirtyDaysAgo","console","log","results"],"sourceRoot":""}